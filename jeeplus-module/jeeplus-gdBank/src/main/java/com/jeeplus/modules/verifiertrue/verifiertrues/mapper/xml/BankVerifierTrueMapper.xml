<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jeeplus.modules.verifiertrue.verifiertrues.mapper.BankVerifierTrueMapper">

    <resultMap id="bankVerifierTrueResult" type="BankVerifierTrue">
   		<result property="id" column="id" />
		<result property="name" column="name" />
		<result property="sort" column="sort" />
		<result property="parentIds" column="parentIds" />
		<result property="columnName" column="columnName" />
		<result property="verifyPerson" column="verifyPerson" />
		<result property="columnId" column="columnId" />
		<association property="hasChildren" column="id" select="hasChildren" />
    </resultMap>
    
	<sql id="bankVerifierTrueColumns">
		a.id AS "id",
		a.create_by AS "createBy.id",
		a.create_date AS "createDate",
		a.update_by AS "updateBy.id",
		a.update_date AS "updateDate",
		a.remarks AS "remarks",
		a.del_flag AS "delFlag",
		a.parent_id AS "parent.id",
		a.parent_ids AS "parentIds",
		a.name AS "name",
		a.sort AS "sort",
		a.column_name AS "columnName",
		a.verify_person AS "verifyPerson",
		a.column_id AS "columnId"
	</sql>
	

	

	<sql id="bankVerifierTrueJoins">
		
		LEFT JOIN sys_user verifyPerson ON verifyPerson.id = a.verify_person
	</sql>
	<delete id="deleteByAll">
		delete from bank_verifier_true
	</delete>


	<select id="get" resultType="BankVerifierTrue">
		SELECT 
			<include refid="bankVerifierTrueColumns"/>
		FROM bank_verifier_true a
		<include refid="bankVerifierTrueJoins"/>
		WHERE a.id = #{id}
	</select>
	
	<select id="findList" resultType="BankVerifierTrue">
		SELECT 
			<include refid="bankVerifierTrueColumns"/>
		FROM bank_verifier_true a
		<include refid="bankVerifierTrueJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
			${dataScope}
			<if test="parent != null and parent.id != null and parent.id != ''">
				AND a.parent_id = #{parent.id}
			</if>
			<if test="parentIds != null and parentIds != ''">
				AND a.parent_ids LIKE
				    <if test="_databaseId == 'postgre'">'%'||#{parentIds}||'%'</if>
					<if test="_databaseId == 'oracle'">'%'||#{parentIds}||'%'</if>
					<if test="_databaseId == 'mssql'">'%'+#{parentIds}+'%'</if>
					<if test="_databaseId == 'mysql'">concat('%',#{parentIds},'%')</if>
			</if>
			<if test="name != null and name != ''">
				AND a.name LIKE
				    <if test="_databaseId == 'postgre'">'%'||#{name}||'%'</if>
					<if test="_databaseId == 'oracle'">'%'||#{name}||'%'</if>
					<if test="_databaseId == 'mssql'">'%'+#{name}+'%'</if>
					<if test="_databaseId == 'mysql'">concat('%',#{name},'%')</if>
			</if>
			<if test="columnName != null and columnName != ''">
				AND a.column_name = #{columnName}
			</if>
			<if test="verifyPerson != null and verifyPerson != ''">
				AND a.verify_person = #{verifyPerson}
			</if>
		</where>
		ORDER BY a.sort ASC
	</select>
	
	<select id="findAllList" resultType="BankVerifierTrue">
		SELECT 
			<include refid="bankVerifierTrueColumns"/>
		FROM bank_verifier_true a
		<include refid="bankVerifierTrueJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
			${dataScope}
		</where>
		ORDER BY a.sort ASC
	</select>
	
	<select id="getChildren" parameterType="String" resultMap="bankVerifierTrueResult">  
        select * from bank_verifier_true where parent_id = #{id} ORDER BY sort 
    </select> 
     
    <select id="hasChildren" parameterType="String" resultType="Boolean">
        select case when exists(select 1 from bank_verifier_true where parent_id = #{id}) then 1 else 0 end <if test="_databaseId == 'oracle'"> from dual </if>
    </select>
    
	<select id="findByParentIdsLike" resultType="BankVerifierTrue">
		SELECT
			a.id,
			a.parent_id AS "parent.id",
			a.parent_ids
		FROM bank_verifier_true a
		<include refid="bankVerifierTrueJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
			AND a.parent_ids LIKE #{parentIds}
		</where>
		ORDER BY a.sort ASC
	</select>

    <insert id="insert">
		INSERT INTO bank_verifier_true(
			id,
			create_by,
			create_date,
			update_by,
			update_date,
			remarks,
			del_flag,
			parent_id,
			parent_ids,
			name,
			sort,
			column_name,
			verify_person,
			column_id
		) VALUES (
			#{id},
			#{createBy.id},
			#{createDate},
			#{updateBy.id},
			#{updateDate},
			#{remarks},
			#{delFlag},
			#{parent.id},
			#{parentIds},
			#{name},
			#{sort},
			#{columnName},
			#{verifyPerson},
			#{columnId}
		)
	</insert>

	<update id="update">
		UPDATE bank_verifier_true SET 	
			update_by = #{updateBy.id},
			update_date = #{updateDate},
			remarks = #{remarks},
			parent_id = #{parent.id},
			parent_ids = #{parentIds},
			name = #{name},
			sort = #{sort},
			column_name = #{columnName},
			verify_person = #{verifyPerson},
			column_id = #{columnId}
		WHERE id = #{id}
	</update>
	
	<update id="updateParentIds">
		UPDATE bank_verifier_true SET 
			parent_id = #{parent.id}, 
			parent_ids = #{parentIds}
		WHERE id = #{id}
	</update>
	
	<!--物理删除-->
	<update id="delete">
		DELETE FROM bank_verifier_true
		WHERE id = #{id} OR parent_ids LIKE
		<if test="_databaseId == 'postgre'">'%,'||#{id}||',%'</if>
		<if test="_databaseId == 'oracle'">'%,'||#{id}||',%'</if>
		<if test="_databaseId == 'mssql'">'%,'+#{id}+',%'</if>
        <if test="_databaseId == 'mysql'">CONCAT('%,', #{id}, ',%')</if>
	</update>
	
	<!--逻辑删除-->
	<update id="deleteByLogic">
		UPDATE bank_verifier_true SET 
			del_flag = #{DEL_FLAG_DELETE}
		WHERE id = #{id} OR parent_ids LIKE
		<if test="_databaseId == 'postgre'">'%,'||#{id}||',%'</if>
		<if test="_databaseId == 'oracle'">'%,'||#{id}||',%'</if>
		<if test="_databaseId == 'mssql'">'%,'+#{id}+',%'</if>
        <if test="_databaseId == 'mysql'">CONCAT('%,', #{id}, ',%')</if>
	</update>

	<!--手动添加-->
	<insert id="addBank">
		INSERT INTO bank_verifier_true(id,del_flag,parent_id,column_name,sort,column_id) values (#{id},#{delFlag},#{parent.id},#{columnName},#{sort},#{columnId})
	</insert>

	<update id="updateById">
        update bank_verifier_true set verify_person=#{verify},remarks=#{remark} where column_id=#{id}
	</update>

	<select id="findLanMuAll" resultType="com.jeeplus.modules.sys.entity.Menu">
		 SELECT * from sys_menu
		 WHERE
		  parent_id in (SELECT id from sys_menu  where parent_ids='0,1,' and `name` not in (select `name` from exclude_column ))
	</select>

	<select id="findBankMenuFistAll" resultType="com.jeeplus.modules.verifierts.verifier.entity.BankMenu">
		(SELECT id,name pname from sys_menu  where parent_ids='0,1,' and `name` not in (select `name` from exclude_column ))
	</select>

	<select id="findBankMenuExtByIdAll" resultType="com.jeeplus.modules.verifierts.verifier.entity.BankMenu">
		 select id,parent_id as parentId,`name` as pname from sys_menu where parent_id=#{id}
	</select>

	<select id="findBankMenuAll" resultType="com.jeeplus.modules.verifierts.verifier.entity.BankMenu">

		 SELECT id,parent_id as parentId,`name` as pname from sys_menu
		 WHERE
		  parent_id in (SELECT id from sys_menu  where parent_ids='0,1,' and `name` not in (select `name` from exclude_column ))

	</select>

	<select id="findByClunmName"
			resultType="com.jeeplus.modules.verifiertrue.verifiertrues.entity.BankVerifierTrue">

		select * from bank_verifier_true where column_id=#{name}
	</select>

	<select id="findAllByPid"
			resultType="com.jeeplus.modules.verifiertrue.verifiertrues.entity.BankVerifierTrue">
		select * from bank_verifier_true where parent_id=#{id}
	</select>

	<select id="findBankTrueByVerifyPerson"
			resultType="com.jeeplus.modules.verifiertrue.verifiertrues.entity.BankVerifierTrue">
		select * from bank_verifier_true where verify_person=#{id}
	</select>

</mapper>